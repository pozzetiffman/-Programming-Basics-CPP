#include <iostream> 
#include <fstream>   // Подключаем библиотеку для работы с файлами

using namespace std;

// Функция для разворота массива
void reverse(int* mas, int sizeMas) {
    // Проходим только половину массива, так как при обмене элементов в первой и второй половинах массив будет полностью развернут
    for (int i = 0; i < sizeMas / 2; i++) {
        // Обмен значениями между симметричными элементами массива
        int temp = mas[i]; // Сохраняем значение текущего элемента в переменной temp
        mas[i] = mas[sizeMas - 1 - i]; // Перезаписываем текущий элемент значением симметричного элемента с конца массива
        mas[sizeMas - 1 - i] = temp; // Записываем сохранённое значение в симметричный элемент
    }
}

int main(int argc, const char * argv[]) {

    ofstream file("out.txt");  // Открываем файл для записи, если файла нет, он будет создан
    
    if (file.is_open()) {  // Проверяем, удалось ли открыть файл
        int size{};
        
        cout << "Введите размер массива: ";  // Запрашиваем размер массива у пользователя
        cin >> size;
        
        int* abb = new int[size];  // Выделяем память под массив с заданным размером
        
        // Ввод элементов массива от пользователя
        for (int i = 0; i < size; i++) {
            cout << "abb[" << i << "] ";  // Выводим индекс элемента массива, чтобы пользователь знал, какой элемент вводить
            cin >> abb[i];
        }
        
        file << size << "\n";  // Записываем размер массива в файл
        
        reverse(abb, size);  // Вызываем функцию для разворота массива
        
        // Записываем развернутый массив в файл
        for (int i = 0; i < size; i++) {
            file << abb[i] << " ";  // Записываем каждый элемент массива в файл, разделяя их пробелом
        }
        
        file.close();  // Закрываем файл после завершения записи
        delete[] abb;  // Освобождаем память, выделенную под массив
    }
    else {
        cout << "Error 15: файл не найден\n";  // Сообщение об ошибке, если файл не удалось открыть
    }
   
    return 0;
}
